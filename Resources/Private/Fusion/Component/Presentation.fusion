prototype(Jonnitto.OutdatedBrowser:Component.Presentation) < prototype(Neos.Fusion:Component) {
    href = ${Configuration.setting('Jonnitto.OutdatedBrowser.href')}
    lowerThan = ${Configuration.setting('Jonnitto.OutdatedBrowser.lowerThan')}
    implementation = ${Configuration.setting('Jonnitto.OutdatedBrowser.implementation')}
    class = ${Configuration.setting('Jonnitto.OutdatedBrowser.class')}

    // Set the language to a specific one
    language = ${null}

    languageDimension = 'language'
    includeCSS = true
    includeJS = true

    availableLanguages = ${['cs','da','de','el','en','es-pe','es','et','fa','fi','fr','hr','hu','id','it','ja','ko','lt','nb','nl','pl','pt-br','pt','ro','ru','sk','sl','sv','tr','uk','zh-cn','zh-tw']}
    fallbackLanguage = ${Configuration.setting('Jonnitto.OutdatedBrowser.fallbackLanguage')}

    // Internal
    _presets = ${Configuration.setting('Jonnitto.OutdatedBrowser.presets')}
    _language = ${this.language && Type.isString(this.language) ? this.language : null}
    _hasDimension = ${Configuration.setting('Neos.ContentRepository.contentDimensions.' + this.languageDimension) != null}
    _dimensionLanguage = ${this._hasDimension ? site.context.dimensions[this.languageDimension][0] : null}
    _defaultLocale = ${Configuration.setting('Neos.Flow.i18n.defaultLocale')}
    _documentLanguage = ${String.toLowerCase(String.replace(this._language || this._dimensionLanguage || this._defaultLocale || this.fallbackLanguage, '_', '-'))}
    _documentLanguageWithoutRegion = ${String.crop(this._documentLanguage, 2)}
    _fallbackLanguage = ${this.fallbackLanguage && Type.isString(this.fallbackLanguage) ? String.toLowerCase(this.fallbackLanguage) : 'en'}
    _fallbackLanguageWithoutRegion = ${String.crop(this._fallbackLanguage, 2)}

    @if.hasLowerThan = ${this.lowerThan}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}
        _CSSFile = ${props.includeCSS ? 'resource://Jonnitto.OutdatedBrowser/Public/Main.css' : false}
        _JSFile = ${props.includeJS && props.implementation ? 'resource://Jonnitto.OutdatedBrowser/Public/' + props.implementation + '.js' : false}
        _selectedLanguage = Neos.Fusion:Case {
            language {
                condition = ${Array.indexOf(props.availableLanguages, props._documentLanguage) != -1}
                renderer = ${props._documentLanguage}
            }
            languageWithoutRegion {
                condition = ${Array.indexOf(props.availableLanguages, props._documentLanguageWithoutRegion) != -1}
                renderer = ${props._documentLanguageWithoutRegion}
            }
            fallbackLanguage {
                condition = ${Array.indexOf(props.availableLanguages, props._fallbackLanguage) != -1}
                renderer = ${props._fallbackLanguage}
            }
            fallbackLanguageWithoutRegion {
                condition = ${Array.indexOf(props.availableLanguages, props._fallbackLanguageWithoutRegion) != -1}
                renderer = ${props._fallbackLanguageWithoutRegion}
            }
            fallbackToEn {
                condition = true
                renderer = 'en'
            }

        }

        _markup = ${File.readFile('resource://Jonnitto.OutdatedBrowser/Private/Templates/' + this._selectedLanguage + '.html')}
        _markup.@process.replaceHref = ${Jonnitto.OutdatedBrowser.replaceHref(value, props.href, this._selectedLanguage)}

        _featureArray = Neos.Fusion:Map {
            items = ${Type.isArray(props.lowerThan) ? props.lowerThan : [props.lowerThan]}
            itemRenderer = ${Array.indexOf(Array.keys(props._presets), item) != -1 ? props._presets[item] : item}
        }

        @if.hasFeatureArray = ${this._featureArray && Type.isArray(this._featureArray)}

        renderer = afx`
            <div id='outdated' class={props.class} data-lowerthan={Array.join(props._featureArray, ',')}>
                <style @if.set={props._CSSFile}>{File.readFile(props._CSSFile)}</style>
                {props._markup}
                <script @if.set={props._JSFile}>{File.readFile(props._JSFile)}</script>
            </div>
        `
    }
}
