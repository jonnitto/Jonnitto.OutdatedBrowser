prototype(Jonnitto.OutdatedBrowser:Component) < prototype(Neos.Fusion:Component) {
    lowerThan = ${Configuration.setting('Jonnitto.OutdatedBrowser.lowerThan')}
    implementation = ${Configuration.setting('Jonnitto.OutdatedBrowser.implementation')}

    languageDimension = 'language'
    includeCSS = true
    includeJS = true

    availableLanguages = ${['cs','da','de','el','en','es-pe','es','et','fa','fi','fr','hr','hu','id','it','ja','ko','lt','nb','nl','pl','pt-br','pt','ro','ru','sk','sl','sv','tr','uk','zh-cn','zh-tw']}
    fallbackLanguage = ${Configuration.setting('Jonnitto.OutdatedBrowser.fallbackLanguage') || 'en'}

    language = Neos.Fusion:Case {
        hasFile {
            documentLanguage = Neos.Fusion:Case {
                hasDimension {
                    condition = ${Configuration.setting('Neos.ContentRepository.contentDimensions.' + languageDimension) != null}
                    renderer = ${String.replace(documentNode.context.dimensions.language[0], '_', '-')}
                }
                hasDefaultLocale {
                    defaultLocale = ${Configuration.setting('Neos.Flow.i18n.defaultLocale')}
                    condition = ${this.defaultLocale}
                    renderer = ${String.crop(this.defaultLocale, 2)}
                }
                default {
                    condition = true
                    renderer = ${fallbackLanguage}
                }
            }
            condition = ${Array.indexOf(availableLanguages, this.documentLanguage) != -1}
            renderer = ${this.documentLanguage}
        }
        noFile {
            condition = ${Array.indexOf(availableLanguages, fallbackLanguage) != -1}
            renderer = ${fallbackLanguage}
        }
        fallbackToEn {
            condition = true
            renderer = 'en'
        }
    }

    @context {
        languageDimension = ${this.languageDimension}
        availableLanguages = ${this.availableLanguages}
        fallbackLanguage = ${this.fallbackLanguage}
    }

    // Internal
    CSSFile = ${this.includeCSS ? 'resource://Jonnitto.OutdatedBrowser/Public/Main.css' : false}
    JSFile = ${this.includeJS && this.implementation ? 'resource://Jonnitto.OutdatedBrowser/Public/' + this.implementation + '.js' : false}
    presets = ${Configuration.setting('Jonnitto.OutdatedBrowser.presets')}
    preset = ${Array.indexOf(Array.keys(this.presets), this.lowerThan) != -1 ? this.presets[this.lowerThan] : this.lowerThan}
    markup = ${File.readFile('resource://Jonnitto.OutdatedBrowser/Private/Templates/' + this.language + '.html')}
    markup.@process.addTarget = ${String.replace(value, 'id="btnUpdateBrowser"', 'id="btnUpdateBrowser" rel="noopener" target="_blank"')}

    @if.hasPreset = ${this.preset}

    renderer = afx`
        <div id='outdated' data-lowerthan={props.preset}>
            <style @if.set={props.CSSFile}>{File.readFile(props.CSSFile)}</style>
            {props.markup}
            <script @if.set={props.JSFile}>{File.readFile(props.JSFile)}</script>
        </div>
    `

    @cache {
        mode = 'cached'
        maximumLifetime = 0
        entryIdentifier{
            outdatedBrowser = 'outdatedbrowser'
            node = ${site}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTag(site)}
        }
    }
}
